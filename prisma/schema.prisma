// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  idPost        Int           @id @default(autoincrement())
  title     String
  content   String?
  sections  PostSection[] // Relation avec les sections de contenu (texte, images, etc.)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

// Mod√®le de section de contenu pour structurer les articles
model PostSection {
  idPostSection        Int       @id @default(autoincrement())
  postId    Int
  post      Post      @relation(fields: [postId], references: [idPost]) // Relation avec l'article
  title     String
  content   String  @db.VarChar(800)   // Le contenu (texte, lien d'image, sous-titre)
  image     String  
}

model NewsLetter{
  idNewsLetter    Int @id @default(autoincrement())
  mail            String @unique
}

model Evenement {
  idEvenement Int @id @default(autoincrement())
  title        String
  content      String @db.VarChar(800)
  image        String
  date         String
  }
model Donation {
  idDonateur Int @id @default(autoincrement())
  nom        String
  tel        String
  mail       String
  ville      String
}

model Actuality {
  idActuality    Int @id @default(autoincrement())
  title          String
  content        String @db.VarChar(500)
  image          String
  date           DateTime @default(now())
}
